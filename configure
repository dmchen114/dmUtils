#!/usr/bin/env python
import optparse
import sys
import os
import subprocess
import platform
import pprint

root_dir = os.path.dirname(__file__)

parser = optparse.OptionParser()

parser.add_option("--format",
    action="store",
    dest="format",
    help="Build system you prefer to use. Valid values are: "
         "msvs, make, xcode, ninja-*")
             
(options, args) = parser.parse_args()

if(not options.format):
    sname = platform.system()
    if(sname == "Windows"):
        options.format = "msvs"
    elif(sname == "Linux"):
        options.format = "make-"
    else:
        options.format = "make-"

def configure_variables(o):
    sys_arch = platform.architecture()[0]
    if(sys_arch == "32bit"):
        o['variables']['target_arch'] = "x86"
    elif(sys_arch == "64bit"):
        o['variables']['target_arch'] = "x64"
    else:
        o['variables']['target_arch'] = "x86"
    
output = {
  'variables': { 'python': sys.executable },
  'include_dirs': [],
  'libraries': [],
  'defines': [],
  'cflags': [],
}

configure_variables(output)

def write(filename, data):
    filename = os.path.join(root_dir, filename)
    print "creating ", filename
    f = open(filename, 'w+')
    f.write(data)

write('config.gypi', "# Do not edit. Generated by the configure script.\n" +
    pprint.pformat(output, indent=2) + "\n")

gyp_args = [sys.executable, 'tools/generator.py', '--no-parallel']
gyp_args += ['-f', options.format]
gyp_args += args

subprocess.call(gyp_args)
